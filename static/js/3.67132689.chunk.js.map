{"version":3,"sources":["component/ExchangeRates/index.ts","component/ExchangeRates/ExchangesRates.tsx"],"names":["ExchangesRates","dispatch","useDispatch","rates","useSelector","getRates","rateFrom","getUserCode","className","onChange","event","loadCode","target","value","defaultValue","hidden","Object","keys","map","rate","to","EUR","toFixed"],"mappings":"mMAEeA,UCKyB,WACtC,IAAMC,EAAWC,cACTC,EAAUC,YAAYC,KAAtBF,MACFG,EAAWF,YAAYG,KAU7B,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,yBACEC,SAZe,SAACC,GACtBT,EAASU,YAASD,EAAME,OAAOC,SAYzBC,aAAcR,EAFhB,UAIE,wBAAQO,MAAOP,EAAUS,QAAM,EAA/B,SAAiCT,IAChCU,OAAOC,KAAKd,GAAOe,KAAI,SAACC,GAAD,OACtB,wBAAmBN,MAAOM,EAA1B,SAAiCA,GAApBA,WAKnB,6BACGH,OAAOC,KAAKd,GAAOe,KAAI,SAACC,GAAD,OACtB,2CACUA,EADV,eApBmBC,EAqBmBD,EApBnChB,EAAMkB,IAAMlB,EAAMG,GAAaH,EAAMiB,IAoBIE,QAAQ,GADpD,YAC0DhB,IADjDa,GApBS,IAACC","file":"static/js/3.67132689.chunk.js","sourcesContent":["import { ExchangesRates } from './ExchangesRates';\n\nexport default ExchangesRates;\n","/* eslint-disable max-len */\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadCode } from '../../store/actions';\nimport { getRates, getUserCode } from '../../store/selectors';\n\nexport const ExchangesRates: React.FC = () => {\n  const dispatch = useDispatch();\n  const { rates } = useSelector(getRates);\n  const rateFrom = useSelector(getUserCode);\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(loadCode(event.target.value));\n  };\n\n  const calculateExchange = (to: string) => {\n    return ((rates.EUR * rates[rateFrom]) / rates[to]);\n  };\n\n  return (\n    <div className=\"box\">\n      <div className=\"select\">\n        <select\n          onChange={handleOnChange}\n          defaultValue={rateFrom}\n        >\n          <option value={rateFrom} hidden>{rateFrom}</option>\n          {Object.keys(rates).map((rate) => (\n            <option key={rate} value={rate}>{rate}</option>\n          ))}\n        </select>\n      </div>\n\n      <ul>\n        {Object.keys(rates).map((rate) => (\n          <li key={rate}>\n            {`1 - ${rate} = ${calculateExchange(rate).toFixed(3)} ${rateFrom}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"sourceRoot":""}